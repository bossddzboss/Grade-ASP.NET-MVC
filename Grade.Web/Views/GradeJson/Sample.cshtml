@model Grade.Web.Models.GradeModel

@{
    ViewBag.Title = "Json Sample";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <!-- Sample.cshtml -->
    <script type="text/javascript">
        $(document).ready(function () {
            var datas = {};
            showGradeDataInTable('#gradeTable');
        });

        function showGradeDataInTable(tableId) {
            $.ajax({
                type: "GET",
                traditional: true,
                async: false,
                cache: false,
                url: '/GradeJson/Index',
                context: document.body,
                //data: getReportColumnsParams,

                success: function (result) {


                    var header = "<table id='" + tableId + "'><tr><th>Id</th><th>Grade Name</th><th>Point</th></tr>";


                    $.each(result, function (i, item) {
                        header = header + "<tr><td>" + item.Id +
                            "</td><td>" + item.GradeName +
                            "</td><td>" + item.Min +
                            " - " + item.Max + "</td></tr>";
                    });
                    header = header + "</table>";
                    $(tableId).replaceWith(header);
                }
                ,
                error: function (xhr) {
                    //debugger;
                    console.log(xhr.responseText);
                    alert("Error has occurred..");
                }
            });


        }
        $("#submitBtn").click(function (tableId) {
            showGradeDataInTable();
        }
        );




    </script>
}
<h2>@ViewBag.Title</h2>
<span id="gradeTable"></span>
<button id="showGrade" onclick="showGradeDataInTable('#gradeTable')">Show Grade</button>



<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>GradeModel</h4>
                        @Html.HiddenFor(m => m.Id)
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.GradeName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.GradeName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.GradeName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Min, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Min, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Min, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Max, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Max, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Max, "", new { @class = "text-danger" })
                            </div>
                        </div>

                       
                    </div>
                    
                }
            </div>
            <div class="form-group modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <input type="submit" value="Add" class="btn btn-primary" id="submit" />
            </div>
        </div>
    </div>
</div>

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@



@*<form>
        <table>
            <tr><th>Grade Name</th><th colspan="2">Point(Min,Max)</th></tr>
            <tr><td><input type="text" /></td><td><input type="number" /></td><td><input type="number" /></td><td><input id="submitBtn" onclick="UpdateUserDetail();>Submit</input></td></tr>
        </table>

    </form>

    onclick="showGradeDataInTable('#gradeTable')"*@
